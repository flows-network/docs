class y extends HTMLElement{constructor(){super();const t=this.querySelector("button[data-open-modal]"),e=this.querySelector("button[data-close-modal]"),s=this.querySelector('button[type="submit"]'),o=this.querySelector("dialog"),n=this.querySelector(".dialog-frame"),i=this.querySelector("form"),c=this.querySelector("div.success-pane"),u=this.querySelector("a.github-button"),l=r=>{i.hidden=r,c.hidden=!r,r&&c.focus()},f=r=>{n.contains(r.target)||m()},p=r=>{l(!1),o.showModal(),i.querySelector("input:checked")?.focus(),r.stopPropagation(),window.addEventListener("click",f)},m=()=>{o.close(),window.removeEventListener("click",f)};t.addEventListener("click",p),e.addEventListener("click",m),u?.addEventListener("click",()=>{const r=new URL("https://github.com/flows-network/issues/new"),d={issue:"⚠️ Issue",idea:"💡 Idea",other:"🐠 Feedback"};if(i.category.value in d){const h=d[i.category.value];r.searchParams.set("title",h)}i.text.value&&r.searchParams.set("body",i.text.value),u.href=r.href}),i.addEventListener("submit",async r=>{r.preventDefault(),s.disabled=!0;try{const d=await fetch("https://api.feedback.fish/feedback",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({projectId:"1b24b5d16c81bd",text:i.text.value,category:i.category.value,metadata:{url:location.pathname.replace(/\/$/,"")}})});if(!d.ok)throw new Error(d.statusText);const h=await d.json();if(h.error)throw new Error(h.error)}catch(d){console.error(`Error submitting feedback form
`,d)}l(!0),s.disabled=!1,i.reset()}),t.disabled=!1}}customElements.define("feedback-form",y);class g extends HTMLElement{id=Math.floor(Math.random()*1e11).toString(32);count=0;TabStore=[];PanelStore=[];constructor(){super();const t=this.querySelectorAll(".panels > section"),e=this.querySelector(".tab-list"),s=e.querySelectorAll("a");e.setAttribute("role","tablist");let o=0;Array.prototype.forEach.call(s,(n,i)=>{n.setAttribute("role","tab"),n.setAttribute("id",this.id+"tab"+this.count++),n.setAttribute("tabindex","-1"),n.parentElement?.setAttribute("role","presentation"),this.TabStore[i]||this.TabStore.push(new Set),this.TabStore[i].add(n),"initial"in n.dataset&&n.dataset.initial!=="false"&&(o=i),n.addEventListener("click",c=>{c.preventDefault();const u=e.querySelector("[aria-selected]");c.currentTarget!==u&&this.switchTab(c.currentTarget,i)}),n.addEventListener("keydown",c=>{const u=Array.prototype.indexOf.call(s,c.currentTarget),l=c.key==="ArrowLeft"?u-1:c.key==="ArrowRight"?u+1:c.key==="ArrowDown"?"down":null;l!==null&&(c.preventDefault(),l==="down"?t[i].focus():s[l]&&this.switchTab(s[l],l))})}),Array.prototype.forEach.call(t,(n,i)=>{n.setAttribute("role","tabpanel"),n.setAttribute("tabindex","-1"),n.setAttribute("aria-labelledby",s[i].id),n.hidden=!0,this.PanelStore[i]||this.PanelStore.push(new Set),this.PanelStore[i].add(n)}),s[o].removeAttribute("tabindex"),s[o].setAttribute("aria-selected","true"),t[o].hidden=!1}switchTab(t,e){this.TabStore.forEach(s=>s.forEach(o=>{o.removeAttribute("aria-selected"),o.setAttribute("tabindex","-1")})),this.TabStore[e].forEach(s=>{s.removeAttribute("tabindex"),s.setAttribute("aria-selected","true")}),this.PanelStore.forEach(s=>s.forEach(o=>{o.hidden=!0})),this.PanelStore[e].forEach(s=>{s.hidden=!1}),t.focus()}}customElements.define("tabbed-content",g);class a{static key="astro-tutorial-progress";static pageKey=a.slugFromPathname(window.location.pathname);static state={[a.pageKey]:{done:!1,lists:{}},...a.load()};static subscribers=new Map;static initialiseList(t){a.pageState.lists[t]||(a.pageState.lists[t]={primary:[],secondary:[]})}static initaliseSubList(t,e,s){a.pageState.lists[t][e].length!==s&&(a.pageState.lists[t][e]=Array.from({length:s},()=>!1),a.store())}static getSubListItem(t,e,s){return a.pageState.lists[t][e][s]}static setSubListItem(t,e,s,o){a.pageState.lists[t][e][s]=o,a.store()}static getPageDone(t){const e=a.state[a.slugFromPathname(t)];return!!e&&e.done}static subscribePageDone(t,e){return a.subscribers.set(e,t),e(a.getPageDone(t)),()=>void a.subscribers.delete(e)}static notifySubscribers(){for(const[t,e]of a.subscribers.entries())t(a.getPageDone(e))}static load(){try{const t=JSON.parse(localStorage.getItem(a.key)||"{}");if(a.validate(t))return t}catch{}return{}}static validate(t){return!!t&&typeof t=="object"&&Object.values(t).every(e=>"done"in e&&e.lists)}static store(){a.pageState.done=a.isPageDone,a.notifySubscribers();try{localStorage.setItem(a.key,JSON.stringify(a.state))}catch{}}static get pageState(){return a.state[a.pageKey]}static get isPageDone(){return Object.values(a.pageState.lists).every(a.isListDone)}static isListDone(t){return["primary","secondary"].map(e=>!!t[e].length&&t[e].every(s=>s)).some(e=>e)}static slugFromPathname(t){return t.split("/").slice(2).join("/").replace(/\/$/,"")}}class v extends HTMLElement{loaded;todoLabel;doneLabel;label;iconPath;constructor(){super(),this.todoLabel=this.dataset.todoLabel,this.doneLabel=this.dataset.doneLabel,this.label=this.querySelector(".sr-only"),this.iconPath=this.querySelector("svg path"),a.subscribePageDone(this.dataset.path,t=>t?this.setDone():this.setTodo()),this.loaded=!0}setTodo(){this.label.innerText=this.todoLabel,this.iconPath.setAttribute("d","M8 16c4.4 0 8-3.6 8-8s-3.6-8-8-8-8 3.6-8 8 3.6 8 8 8z"),this.iconPath.removeAttribute("fill")}setDone(){this.label.innerText!==this.doneLabel&&(this.label.innerText=this.doneLabel,this.iconPath.setAttribute("d","M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm3.78-9.72a.75.75 0 0 0-1.06-1.06L6.75 9.19 5.28 7.72a.75.75 0 0 0-1.06 1.06l2 2a.75.75 0 0 0 1.06 0l4.5-4.5z"),this.iconPath.setAttribute("fill","hsl(var(--color-green))"),this.loaded&&this.animateDone())}animateDone(){matchMedia("(prefers-reduced-motion: no-preference").matches&&this.querySelector("svg").animate([{transform:"scale(1.1)"}],{duration:200,easing:"ease-in-out"})}}customElements.define("check-mark",v);class w extends HTMLElement{loaded;paths;doneCount;segments;constructor(){super(),this.paths=JSON.parse(this.dataset.paths||"[]"),this.doneCount=this.querySelector(".sr-done-count"),this.segments=this.querySelectorAll(".segment"),this.paths.forEach(t=>a.subscribePageDone(t,()=>this.updateDone())),this.loaded=!0}updateDone(){const t=this.getDoneCount();this.doneCount.textContent=String(t),this.segments.forEach((e,s)=>{const o=s<t,n=this.loaded&&!e.classList.contains("done");o?(e.classList.add("done"),n&&this.animateDone(e)):e.classList.remove("done")})}animateDone(t){matchMedia("(prefers-reduced-motion: no-preference").matches&&t.animate([{transform:"scale(1.1)"}],{duration:200,easing:"ease-in-out"})}getDoneCount(){return this.paths.map(a.getPageDone).filter(t=>t).length}}customElements.define("unit-progress-icon",w);
