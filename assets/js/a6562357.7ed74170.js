"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1539],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(f,a(a({ref:n},d),{},{components:t})):r.createElement(f,a({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},764:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:6},a="SendGrid",s={unversionedId:"integrations/sendgrid",id:"integrations/sendgrid",title:"SendGrid",description:"The sendgrid-flows library enables you to automate email operations using SendGrid on the Flows Network platform. You can send emails directly from your Flows Functions, providing you with more ways of communication and enhancing your ability to deliver results.",source:"@site/docs/integrations/sendgrid.md",sourceDirName:"integrations",slug:"/integrations/sendgrid",permalink:"/docs/integrations/sendgrid",draft:!1,editUrl:"https://github.com/flows-network/docs/tree/main/docs/integrations/sendgrid.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"ChatGPT",permalink:"/docs/integrations/openai"},next:{title:"Claude",permalink:"/docs/integrations/claude"}},l={},c=[{value:"Trigger",id:"trigger",level:2},{value:"Action",id:"action",level:2},{value:"Recommended flows and templates",id:"recommended-flows-and-templates",level:2},{value:"API Reference",id:"api-reference",level:2}],d={toc:c};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sendgrid"},"SendGrid"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://docs.rs/sendgrid-flows/"},(0,i.kt)("inlineCode",{parentName:"a"},"sendgrid-flows"))," library enables you to automate email operations using SendGrid on the ",(0,i.kt)("a",{parentName:"p",href:"https://flows.network/"},"Flows Network")," platform. You can send emails directly from your ",(0,i.kt)("inlineCode",{parentName:"p"},"Flows Functions"),", providing you with more ways of communication and enhancing your ability to deliver results."),(0,i.kt)("h2",{id:"trigger"},"Trigger"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"Flows Function")," or bot, built with this library, is able to send emails upon your request. It can be integrated seamlessly with other services on the ",(0,i.kt)("inlineCode",{parentName:"p"},"Flows Network"),"."),(0,i.kt)("h2",{id:"action"},"Action"),(0,i.kt)("p",null,"When instructed, the function uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"send_email()")," function to send an email through SendGrid. The specific action taken is defined within the function that you provide to ",(0,i.kt)("inlineCode",{parentName:"p"},"listen_to_channel()"),"."),(0,i.kt)("h2",{id:"recommended-flows-and-templates"},"Recommended flows and templates"),(0,i.kt)("p",null,"Here is a minimal example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use openai_flows::{Email, send_email};\nuse slack_flows::{listen_to_channel};\n\n#[no_mangle]\npub fn run() {\n    listen_to_channel("myworkspace", "mychannel", |sm| {\n        let email = Email {\n            to: vec!["receiver@domain.com"],\n            subject: "Hi",\n            content: sm.text\n        };\n        send_email("sender@domain.com", email);\n    });\n}\n')),(0,i.kt)("p",null,"This code shows a basic bot that listens for incoming messages in a specific Slack channel and sends an email through SendGrid with the content of the Slack message."),(0,i.kt)("h2",{id:"api-reference"},"API Reference"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.rs/sendgrid-flows/"},"https://docs.rs/sendgrid-flows/")))}p.isMDXComponent=!0}}]);