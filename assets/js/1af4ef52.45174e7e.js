"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5617],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>u});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),h=d(o),u=n,m=h["".concat(s,".").concat(u)]||h[u]||p[u]||a;return o?r.createElement(m,l(l({ref:t},c),{},{components:o})):r.createElement(m,l({ref:t},c))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var d=2;d<a;d++)l[d]=o[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}h.displayName="MDXCreateElement"},7994:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=o(7462),n=(o(7294),o(3905));const a={sidebar_position:2},l="A Hello World Discord bot",i={unversionedId:"getting-started-developer/hello-world-discord",id:"getting-started-developer/hello-world-discord",title:"A Hello World Discord bot",description:"In this article, I will show you how to create a flow function that responds to events from external services. This flow function is a Discord bot.",source:"@site/docs/getting-started-developer/hello-world-discord.md",sourceDirName:"getting-started-developer",slug:"/getting-started-developer/hello-world-discord",permalink:"/docs/getting-started-developer/hello-world-discord",draft:!1,editUrl:"https://github.com/flows-network/docs/tree/main/docs/getting-started-developer/hello-world-discord.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Hello world",permalink:"/docs/getting-started-developer/hello-world"},next:{title:"Create a web chat powered by ChatGPT",permalink:"/docs/getting-started-developer/chatgpt"}},s={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Prepare the source code",id:"prepare-the-source-code",level:2},{value:"Import, build and deploy",id:"import-build-and-deploy",level:2},{value:"Test it!",id:"test-it",level:2},{value:"Code walkthrough",id:"code-walkthrough",level:2},{value:"Read more",id:"read-more",level:2}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"a-hello-world-discord-bot"},"A Hello World Discord bot"),(0,n.kt)("p",null,"In this article, I will show you how to create a flow function that responds to events from external services. This flow function is a Discord bot.\nIf you send the bot a private message, it will echo the message back to you."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"A GitHub account to log into the ",(0,n.kt)("a",{parentName:"li",href:"https://flows.network/"},"flows.network")," platform. It's free."),(0,n.kt)("li",{parentName:"ol"},"A Discord server that you have permission to add a bot.")),(0,n.kt)("h2",{id:"prepare-the-source-code"},"Prepare the source code"),(0,n.kt)("p",null,"For this tutorial, we already created ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/flows-network/hello-world-discord"},"a repo named ",(0,n.kt)("inlineCode",{parentName:"a"},"hello-world-discord"))," for you to fork."),(0,n.kt)("h2",{id:"import-build-and-deploy"},"Import, build and deploy"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://flows.network/flow/new"},"Click here")," to import your forked source code repo for the flow function into flows.network."),(0,n.kt)("p",null,"For this flow function, we need to add a Discord token in settings so that it can listen for messages from a specific Discord bot.\nPlease refer to ",(0,n.kt)("a",{parentName:"p",href:"https://flows.network/blog/discord-chat-bot-guide"},"How to create a Discord chat bot")," on how to get your Discord token.\nClick on the ",(0,n.kt)("strong",{parentName:"p"},"Advanced")," link to configure the settings."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"discord_token"),(0,n.kt)("td",{parentName:"tr",align:null},"Copied from Discord Developer Portal")))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"We put the Discord token in the settings as opposed to in the source code for two reasons. First, we keep the token secure by keeping it out of the public GitHub repos. Second, we make it easy to reuse the flow function source code.")),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(9065).Z,width:"1131",height:"574"})),(0,n.kt)("p",null,"Next, click on the ",(0,n.kt)("strong",{parentName:"p"},"Build")," and ",(0,n.kt)("strong",{parentName:"p"},"Deploy")," buttons to create the flow funtion."),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(8503).Z,width:"1179",height:"396"})),(0,n.kt)("p",null,"Finally, you will be redirected to the flow details page, where you can check for\nservice status and logs.\nDiscord should appear as a connected external service on this page."),(0,n.kt)("h2",{id:"test-it"},"Test it!"),(0,n.kt)("p",null,"When the status of the flow is ready and running, you can invite the Discord bot to your sever.\nRefer to this guide to ",(0,n.kt)("a",{parentName:"p",href:"https://flows.network/blog/discord-chat-bot-guide"},"invite the bot to your server"),"."),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(5179).Z,width:"1598",height:"745"})),(0,n.kt)("p",null,"After the bot joined your server, you can find the bot on the right contact list and DM the bot. The bot will simply repeat what you just say."),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(5624).Z,width:"569",height:"556"})),(0,n.kt)("h2",{id:"code-walkthrough"},"Code walkthrough"),(0,n.kt)("p",null,"The source code for the flow function is written in the Rust programming language.\nThe ",(0,n.kt)("inlineCode",{parentName:"p"},"on_deploy()")," function is called by the flows.network platform when the flow is first deployed.\nWe create a ",(0,n.kt)("inlineCode",{parentName:"p"},"bot")," from the ",(0,n.kt)("inlineCode",{parentName:"p"},"discord_token")," and then call ",(0,n.kt)("inlineCode",{parentName:"p"},"bot.listen_to_messages()")," to start up a\nlistener in flows.network to listen for incoming messages from the bot."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'pub async fn on_deploy() {\n    let token = std::env::var("discord_token").unwrap();\n    let bot = ProvidedBot::new(token);\n    bot.listen_to_messages().await;\n}\n')),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"handler()")," function is annotated with ",(0,n.kt)("inlineCode",{parentName:"p"},"#[message_handler]"),", which is a macro defined in the Discord SDK.\nIt is called by the flows.network platform whenever the bot listener receives a Discord message.\nThe flows.network platform passes the ",(0,n.kt)("inlineCode",{parentName:"p"},"Message")," struct, also defined in the Discord SDK, to the ",(0,n.kt)("inlineCode",{parentName:"p"},"handler()")," function."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'#[message_handler]\nasync fn handler(msg: Message) {\n    logger::init();\n    let token = std::env::var("discord_token").unwrap();\n    let bot = ProvidedBot::new(token);\n    let discord = bot.get_client();\n\n    if msg.author.bot {\n        log::debug!("ignored bot message");\n        return;\n    }\n    if msg.member.is_some() {\n        log::debug!("ignored channel message");\n        return;\n    }\n\n    let channel_id = msg.channel_id;\n    let resp = format!("Welcome to flows.network.\\nYou just said: \'{}\'.\\n", msg.content);\n\n    _ = discord.send_message(\n        channel_id.into(),\n        &serde_json::json!({\n            "content": resp\n        }),\n    ).await;\n}\n')),(0,n.kt)("p",null,"The flows.network platform retrieves the Rust source code from your GitHub repo and then compiles it for you. Of course, you can also\ncompile it locally by installing the Rust compiler toolchain and then run the command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --target wasm32-wasi --release\n")),(0,n.kt)("h2",{id:"read-more"},"Read more"),(0,n.kt)("p",null,"Tutorials and sample code for related flow functions. Click on the ",(0,n.kt)("strong",{parentName:"p"},"Deploy")," link to ",(0,n.kt)("a",{parentName:"p",href:"../category/getting-started-with-templates"},"configure and deploy your own flow without writing any code from a template"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Discord bot with ChatGPT ",(0,n.kt)("a",{parentName:"li",href:"../bot-developer/discord-chatgpt"},"Tutorial")," | ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/flows-network/discord-chatgpt/"},"Code")," | ",(0,n.kt)("a",{parentName:"li",href:"https://flows.network/flow/createByTemplate/discord-chatgpt"},"Deploy")),(0,n.kt)("li",{parentName:"ul"},"Telegram bot with ChatGPT ",(0,n.kt)("a",{parentName:"li",href:"../bot-developer/telegram-chatgpt"},"Tutorial")," | ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/flows-network/telegram-gpt"},"Code")," | ",(0,n.kt)("a",{parentName:"li",href:"https://flows.network/flow/createByTemplate/Telegram-ChatGPT"},"Deploy")),(0,n.kt)("li",{parentName:"ul"},"Slack bot with ChatGPT ",(0,n.kt)("a",{parentName:"li",href:"../bot-developer/slack-chatgpt"},"Tutorial")," | ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/flows-network/slack-chatgpt"},"Code")," | ",(0,n.kt)("a",{parentName:"li",href:"https://flows.network/flow/createByTemplate/Slack-Chatgpt"},"Deploy")),(0,n.kt)("li",{parentName:"ul"},"GitHub comment bot with ChatGPT ",(0,n.kt)("a",{parentName:"li",href:"../bot-developer/github-chatgpt"},"Tutorial")," | ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/flows-network/chatgpt-github-app"},"Code"))))}p.isMDXComponent=!0},9065:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/images/hello-world-discord-01-1a5713b32339274bf2120d1b533043f1.png"},8503:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/images/hello-world-discord-02-14838585b18c04ba8b4a56b9fbb24bf7.png"},5179:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/images/hello-world-discord-03-ed7e4ecc0bde266cd01a08834154934e.png"},5624:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/images/hello-world-discord-04-5a8cc759a8bbb6b039f68f43dee9c503.png"}}]);